/*
错误处理：
Go 语言中通常用最后一个返回值来代表可能发生的错误。
它可以是布尔型，通常被命名为ok。这种方式常用在错误类型单一，如，从cache中获取数据时不存在。
如果错误信息不单一，或者要返回更多的信息。可以使用error类型。
error是接口类型，当它不为nil时，可以调用它的Error函数或者直接用fmt（fmt.Errorf）输出，得到字符串类型的错误信息。


错误处理的5种策略：
1.传播（返回）错误。可以在传播错误前，对错误进行转换，添加额外的详细信息。
2.发生错误时进行重试操作。
3.输出错误信息，并结束程序。这通常只在main中使用。
4.只输出错误信息，不中断程序执行。
5.对于不是特别重要的操作引起的错误，可以直接忽略错误。

EOF错误：因为文件结束这种错误不需要更多的描述，所以它有个固定的错误信息"EOF"。
io包保证任何由文件结束引起的读取失败都会返回同一个错误 io.EOF。
*/
package main
